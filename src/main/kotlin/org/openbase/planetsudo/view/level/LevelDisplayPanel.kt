/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/*
 * LevelDisplayPanel.java
 *
 * Created on Jun 19, 2010, 1:15:02 PM
 */
package org.openbase.planetsudo.view.level

import org.openbase.jul.visual.swing.engine.draw2d.ResourceDisplayPanel
import org.openbase.planetsudo.level.AbstractLevel
import org.slf4j.Logger
import org.slf4j.LoggerFactory
import javax.swing.GroupLayout

/**
 *
 * @author [Divine Threepwood](mailto:divine@openbase.org)
 */
class LevelDisplayPanel : ResourceDisplayPanel<LevelPanel>(), Runnable {
    private val logger: Logger = LoggerFactory.getLogger(javaClass)

    enum class VideoThreadCommand {
        Start, Stop, Pause, Resume
    }

    private var videoThread: Thread? = null
    private var isRunning: Boolean
    private var stop = false

    /** Creates new form LevelDisplayPanel  */
    init {
        initComponents()
        isRunning = false
    }

    @Throws(InterruptedException::class)
    fun setLevel(level: AbstractLevel) {
        setVisibleResourcePanel(LevelPanel(level, this))
    }

    fun displayLevelObjects() {
        if (visibleResourcePanel != null) {
            visibleResourcePanel?.loadLevelObjects()
        }
    }

    @Synchronized
    fun setVideoThreadCommand(command: VideoThreadCommand?) {
        when (command) {
            VideoThreadCommand.Start, VideoThreadCommand.Resume -> if (!isRunning) {
                isRunning = true
                stop = false
                videoThread = Thread(this, "VideoVideoThread")
                videoThread!!.priority = Thread.NORM_PRIORITY + 2
                videoThread!!.start()
            } else {
                logger.debug("VideoThread allready started.")
            }

            VideoThreadCommand.Stop, VideoThreadCommand.Pause -> if (isRunning) {
                stop = true
            } else {
                logger.debug("VideoThread allready stopped.")
            }

            else -> {}
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private fun initComponents() {
        isOpaque = false

        val layout = GroupLayout(this)
        this.layout = layout
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 400, Short.MAX_VALUE.toInt()),
        )
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGap(0, 300, Short.MAX_VALUE.toInt()),
        )
    } // </editor-fold>//GEN-END:initComponents

    override fun run() {
        logger.info("VideoThread started.")
        while (!stop) {
            if (visibleResourcePanel != null) {
                repaint()
            }
            Thread.sleep(50)
        }
        isRunning = false
        logger.info("VideoThread stopped.")
    } // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
