/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LevelDisplayPanel.java
 *
 * Created on Jun 19, 2010, 1:15:02 PM
 */

package org.openbase.planetsudo.view.level;

/*-
 * #%L
 * PlanetSudo GameEngine
 * %%
 * Copyright (C) 2009 - 2018 openbase.org
 * %%
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with this program.  If not, see
 * <http://www.gnu.org/licenses/gpl-3.0.html>.
 * #L%
 */

import org.openbase.jul.visual.swing.engine.draw2d.ResourceDisplayPanel;
import org.slf4j.Logger;
import org.openbase.planetsudo.level.AbstractLevel;
import org.slf4j.LoggerFactory;

/**
 *
 * @author <a href="mailto:divine@openbase.org">Divine Threepwood</a>
 */
public class LevelDisplayPanel extends ResourceDisplayPanel<LevelPanel> implements Runnable {

    private final Logger logger = LoggerFactory.getLogger(getClass());
    
	public enum VideoThreadCommand {Start, Stop, Pause, Resume};

	private Thread videoThread;
	private boolean isRunning, stop;

    /** Creates new form LevelDisplayPanel */
    public LevelDisplayPanel() {
        initComponents();
		isRunning = false;
    }
	
	public void setLevel(AbstractLevel level) throws InterruptedException {
		setVisibleResourcePanel(new LevelPanel(level, this));
	}

	public void displayLevelObjects() {
		if(visibleResourcePanel != null) {
			visibleResourcePanel.loadLevelObjects();
		}
	}

	public synchronized  void setVideoThreadCommand(VideoThreadCommand command) {
		switch(command) {
			case Start:
			case Resume:
				if(!isRunning) {
					isRunning = true;
					stop = false;
					videoThread = new Thread(this, "VideoVideoThread");
					videoThread.setPriority(Thread.NORM_PRIORITY+2);
					videoThread.start();
				} else {
					logger.debug("VideoThread allready started.");
				}
				break;
			case Stop:
			case Pause:
				if(isRunning) {
					stop = true;
				} else {
					logger.debug("VideoThread allready stopped.");
				}
				break;
		}
	}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setOpaque(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

	@Override
	public void run() {
		logger.info("VideoThread started.");
		while(!stop) {
			if(visibleResourcePanel != null) {
				repaint();
			}
			try {
				Thread.sleep(50);
			} catch (InterruptedException ex) {
				logger.warn("VideoThread interruped!", ex);
			}
		}
		isRunning = false;
		logger.info("VideoThread stopped.");
	}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
