package org.openbase.planetsudo.view.game

import org.openbase.planetsudo.game.GameManager.Companion.gameManager
import org.openbase.planetsudo.view.level.LevelDisplayPanel
import org.openbase.planetsudo.view.level.LevelDisplayPanel.VideoThreadCommand
import org.openbase.planetsudo.view.menu.LevelMenuPanel
import org.openbase.planetsudo.view.menu.TeamMenuPanel
import java.awt.BorderLayout
import javax.swing.JPanel

/**
 * @author [Divine Threepwood](mailto:divine@openbase.org)
 */
class GamePanel : JPanel() {
    var isTeamPanelDisplayed: Boolean
        private set
    private val levelMenuPanel: LevelMenuPanel

    @Throws(InterruptedException::class)
    fun updateDynamicComponents() {
        gameManager.level?.let { levelDisplayPanel!!.setLevel(it) }
        levelDisplayPanel!!.displayLevelObjects()
        teamMenuPanel1!!.setTeam(gameManager.teamA)
        teamMenuPanel2!!.setTeam(gameManager.teamB)
        levelMenuPanel.setLevel(gameManager.level!!)
        background = gameManager.level!!.color
        updateTeamPanelDisplayState()
    }

    fun displayTeamPanel(visible: Boolean) {
        isTeamPanelDisplayed = visible
        updateTeamPanelDisplayState()
    }

    fun updateTeamPanelDisplayState() {
        teamMenuPanel1!!.isVisible = isTeamPanelDisplayed
        teamMenuPanel2!!.isVisible = isTeamPanelDisplayed
    }

    fun displayEndCalculation() {
        teamMenuPanel1!!.displayEndCalculation()
        teamMenuPanel2!!.displayEndCalculation()
    }

    fun setVideoThreadCommand(command: VideoThreadCommand?) {
        levelDisplayPanel!!.setVideoThreadCommand(command)
        when (command) {
            VideoThreadCommand.Start, VideoThreadCommand.Resume -> levelMenuPanel.startTimer()
            VideoThreadCommand.Stop -> {
                levelMenuPanel.stopTimer()
                levelMenuPanel.reset()
            }

            VideoThreadCommand.Pause -> levelMenuPanel.stopTimer()
            else -> {}
        }
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private fun initComponents() {
        levelDisplayPanel = LevelDisplayPanel()
        teamMenuPanel1 = TeamMenuPanel()
        teamMenuPanel2 = TeamMenuPanel()

        layout = BorderLayout(5, 5)
        add(levelDisplayPanel, BorderLayout.CENTER)
        add(teamMenuPanel1, BorderLayout.LINE_START)
        add(teamMenuPanel2, BorderLayout.LINE_END)
    } // </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private var levelDisplayPanel: LevelDisplayPanel? = null
    private var teamMenuPanel1: TeamMenuPanel? = null
    private var teamMenuPanel2: TeamMenuPanel? = null // End of variables declaration//GEN-END:variables

    /**
     * Creates new form GamePanel
     */
    init {
        this.initComponents()
        this.levelMenuPanel = LevelMenuPanel()
        this.add(levelMenuPanel, BorderLayout.NORTH)
        this.isTeamPanelDisplayed = true
    }
}
